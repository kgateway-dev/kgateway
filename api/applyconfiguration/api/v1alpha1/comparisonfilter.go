// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
)

// ComparisonFilterApplyConfiguration represents a declarative configuration of the ComparisonFilter type for use
// with apply.
type ComparisonFilterApplyConfiguration struct {
	Op    *v1alpha1.Op                     `json:"op,omitempty"`
	Value *RuntimeUInt32ApplyConfiguration `json:"value,omitempty"`
}

// ComparisonFilterApplyConfiguration constructs a declarative configuration of the ComparisonFilter type for use with
// apply.
func ComparisonFilter() *ComparisonFilterApplyConfiguration {
	return &ComparisonFilterApplyConfiguration{}
}

// WithOp sets the Op field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Op field is set to the value of the last call.
func (b *ComparisonFilterApplyConfiguration) WithOp(value v1alpha1.Op) *ComparisonFilterApplyConfiguration {
	b.Op = &value
	return b
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *ComparisonFilterApplyConfiguration) WithValue(value *RuntimeUInt32ApplyConfiguration) *ComparisonFilterApplyConfiguration {
	b.Value = value
	return b
}
