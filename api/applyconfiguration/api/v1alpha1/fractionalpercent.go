// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
)

// FractionalPercentApplyConfiguration represents a declarative configuration of the FractionalPercent type for use
// with apply.
type FractionalPercentApplyConfiguration struct {
	Numerator   *uint32                   `json:"numerator,omitempty"`
	Denominator *v1alpha1.DenominatorType `json:"denominator,omitempty"`
}

// FractionalPercentApplyConfiguration constructs a declarative configuration of the FractionalPercent type for use with
// apply.
func FractionalPercent() *FractionalPercentApplyConfiguration {
	return &FractionalPercentApplyConfiguration{}
}

// WithNumerator sets the Numerator field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Numerator field is set to the value of the last call.
func (b *FractionalPercentApplyConfiguration) WithNumerator(value uint32) *FractionalPercentApplyConfiguration {
	b.Numerator = &value
	return b
}

// WithDenominator sets the Denominator field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Denominator field is set to the value of the last call.
func (b *FractionalPercentApplyConfiguration) WithDenominator(value v1alpha1.DenominatorType) *FractionalPercentApplyConfiguration {
	b.Denominator = &value
	return b
}
